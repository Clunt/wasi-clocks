package wasi:clocks@0.2.0;
/// WASI单调时钟(Monotonic Clock)是旨在让用户测量运行时间的API。
///
/// 该API旨在至少在Unix系列平台和Windows之间具有可移植性。
///
/// 单调时钟是具有未指定初始值的时钟，并且连续读取该时钟将产生非递减值(non-decreasing values)。
interface monotonic-clock {
    use wasi:io/poll@0.2.0.{pollable};

    /// 时间中的时点(instant)，以纳秒(nanoseconds)为单位。
    /// instant与一个未指定的初始值有关，
    /// 且仅能与其他相同单调时钟的instant进行比较。
    type instant = u64;

    /// 时间中的时长(duration)，以纳秒(nanoseconds)为单位。
    type duration = u64;

    /// 读取时钟当前值。
    ///
    /// 时钟是单调的，因此重复调用此函数将产生一系列非递减值。
    now: func() -> instant;

    /// 查询时钟的resolution。
    /// 返回与时钟周期(clock tick)对应的时间时长(duration)。
    resolution: func() -> duration;

    /// 创建一个到达指定时刻(instant)被解析的`pollable`。
    subscribe-instant: func(
        when: instant,
    ) -> pollable;

    /// 创建一个在调用此函数经过指定时长(duration)后被解析的`pollable`。
    subscribe-duration: func(
        when: duration,
    ) -> pollable;
}
